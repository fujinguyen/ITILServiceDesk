#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITIL.Modules.ServiceDesk
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ServiceDesk")]
	public partial class ServiceDeskDALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertServiceDesk_Log(ServiceDesk_Log instance);
    partial void UpdateServiceDesk_Log(ServiceDesk_Log instance);
    partial void DeleteServiceDesk_Log(ServiceDesk_Log instance);
    partial void InsertServiceDesk_Setting(ServiceDesk_Setting instance);
    partial void UpdateServiceDesk_Setting(ServiceDesk_Setting instance);
    partial void DeleteServiceDesk_Setting(ServiceDesk_Setting instance);
    partial void InsertServiceDesk_TaskAssociation(ServiceDesk_TaskAssociation instance);
    partial void UpdateServiceDesk_TaskAssociation(ServiceDesk_TaskAssociation instance);
    partial void DeleteServiceDesk_TaskAssociation(ServiceDesk_TaskAssociation instance);
    partial void InsertServiceDesk_TaskCategory(ServiceDesk_TaskCategory instance);
    partial void UpdateServiceDesk_TaskCategory(ServiceDesk_TaskCategory instance);
    partial void DeleteServiceDesk_TaskCategory(ServiceDesk_TaskCategory instance);
    partial void InsertServiceDesk_TaskDetail(ServiceDesk_TaskDetail instance);
    partial void UpdateServiceDesk_TaskDetail(ServiceDesk_TaskDetail instance);
    partial void DeleteServiceDesk_TaskDetail(ServiceDesk_TaskDetail instance);
    partial void InsertServiceDesk_Category(ServiceDesk_Category instance);
    partial void UpdateServiceDesk_Category(ServiceDesk_Category instance);
    partial void DeleteServiceDesk_Category(ServiceDesk_Category instance);
    partial void InsertServiceDesk_Attachment(ServiceDesk_Attachment instance);
    partial void UpdateServiceDesk_Attachment(ServiceDesk_Attachment instance);
    partial void DeleteServiceDesk_Attachment(ServiceDesk_Attachment instance);
    partial void InsertServiceDesk_Task(ServiceDesk_Task instance);
    partial void UpdateServiceDesk_Task(ServiceDesk_Task instance);
    partial void DeleteServiceDesk_Task(ServiceDesk_Task instance);
    partial void InsertServiceDesk_Role(ServiceDesk_Role instance);
    partial void UpdateServiceDesk_Role(ServiceDesk_Role instance);
    partial void DeleteServiceDesk_Role(ServiceDesk_Role instance);
    partial void InsertServiceDesk_LastSearch(ServiceDesk_LastSearch instance);
    partial void UpdateServiceDesk_LastSearch(ServiceDesk_LastSearch instance);
    partial void DeleteServiceDesk_LastSearch(ServiceDesk_LastSearch instance);
    #endregion
		
		public ServiceDeskDALDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDeskDALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDeskDALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDeskDALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServiceDeskDALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ServiceDesk_Log> ServiceDesk_Logs
		{
			get
			{
				return this.GetTable<ServiceDesk_Log>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_Setting> ServiceDesk_Settings
		{
			get
			{
				return this.GetTable<ServiceDesk_Setting>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_TaskAssociation> ServiceDesk_TaskAssociations
		{
			get
			{
				return this.GetTable<ServiceDesk_TaskAssociation>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_TaskCategory> ServiceDesk_TaskCategories
		{
			get
			{
				return this.GetTable<ServiceDesk_TaskCategory>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_TaskDetail> ServiceDesk_TaskDetails
		{
			get
			{
				return this.GetTable<ServiceDesk_TaskDetail>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_Category> ServiceDesk_Categories
		{
			get
			{
				return this.GetTable<ServiceDesk_Category>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_Attachment> ServiceDesk_Attachments
		{
			get
			{
				return this.GetTable<ServiceDesk_Attachment>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_Task> ServiceDesk_Tasks
		{
			get
			{
				return this.GetTable<ServiceDesk_Task>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_Role> ServiceDesk_Roles
		{
			get
			{
				return this.GetTable<ServiceDesk_Role>();
			}
		}
		
		public System.Data.Linq.Table<ServiceDesk_LastSearch> ServiceDesk_LastSearches
		{
			get
			{
				return this.GetTable<ServiceDesk_LastSearch>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_Log")]
	public partial class ServiceDesk_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private int _TaskID;
		
		private string _LogDescription;
		
		private System.DateTime _DateCreated;
		
		private int _UserID;
		
		private EntityRef<ServiceDesk_Task> _ServiceDesk_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnLogDescriptionChanging(string value);
    partial void OnLogDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ServiceDesk_Log()
		{
			this._ServiceDesk_Task = default(EntityRef<ServiceDesk_Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", DbType="Int NOT NULL")]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._ServiceDesk_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string LogDescription
		{
			get
			{
				return this._LogDescription;
			}
			set
			{
				if ((this._LogDescription != value))
				{
					this.OnLogDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LogDescription = value;
					this.SendPropertyChanged("LogDescription");
					this.OnLogDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_Log", Storage="_ServiceDesk_Task", ThisKey="TaskID", OtherKey="TaskID", IsForeignKey=true)]
		public ServiceDesk_Task ServiceDesk_Task
		{
			get
			{
				return this._ServiceDesk_Task.Entity;
			}
			set
			{
				ServiceDesk_Task previousValue = this._ServiceDesk_Task.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDesk_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDesk_Task.Entity = null;
						previousValue.ServiceDesk_Logs.Remove(this);
					}
					this._ServiceDesk_Task.Entity = value;
					if ((value != null))
					{
						value.ServiceDesk_Logs.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(int);
					}
					this.SendPropertyChanged("ServiceDesk_Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_Settings")]
	public partial class ServiceDesk_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingID;
		
		private int _PortalID;
		
		private string _SettingName;
		
		private string _SettingValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIDChanging(int value);
    partial void OnSettingIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public ServiceDesk_Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SettingID
		{
			get
			{
				return this._SettingID;
			}
			set
			{
				if ((this._SettingID != value))
				{
					this.OnSettingIDChanging(value);
					this.SendPropertyChanging();
					this._SettingID = value;
					this.SendPropertyChanged("SettingID");
					this.OnSettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_TaskAssociations")]
	public partial class ServiceDesk_TaskAssociation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskRelationID;
		
		private int _TaskID;
		
		private int _AssociatedID;
		
		private EntityRef<ServiceDesk_Task> _ServiceDesk_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskRelationIDChanging(int value);
    partial void OnTaskRelationIDChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnAssociatedIDChanging(int value);
    partial void OnAssociatedIDChanged();
    #endregion
		
		public ServiceDesk_TaskAssociation()
		{
			this._ServiceDesk_Task = default(EntityRef<ServiceDesk_Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskRelationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskRelationID
		{
			get
			{
				return this._TaskRelationID;
			}
			set
			{
				if ((this._TaskRelationID != value))
				{
					this.OnTaskRelationIDChanging(value);
					this.SendPropertyChanging();
					this._TaskRelationID = value;
					this.SendPropertyChanged("TaskRelationID");
					this.OnTaskRelationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", DbType="Int NOT NULL")]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._ServiceDesk_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssociatedID", DbType="Int NOT NULL")]
		public int AssociatedID
		{
			get
			{
				return this._AssociatedID;
			}
			set
			{
				if ((this._AssociatedID != value))
				{
					this.OnAssociatedIDChanging(value);
					this.SendPropertyChanging();
					this._AssociatedID = value;
					this.SendPropertyChanged("AssociatedID");
					this.OnAssociatedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_TaskAssociation", Storage="_ServiceDesk_Task", ThisKey="TaskID", OtherKey="TaskID", IsForeignKey=true)]
		public ServiceDesk_Task ServiceDesk_Task
		{
			get
			{
				return this._ServiceDesk_Task.Entity;
			}
			set
			{
				ServiceDesk_Task previousValue = this._ServiceDesk_Task.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDesk_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDesk_Task.Entity = null;
						previousValue.ServiceDesk_TaskAssociations.Remove(this);
					}
					this._ServiceDesk_Task.Entity = value;
					if ((value != null))
					{
						value.ServiceDesk_TaskAssociations.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(int);
					}
					this.SendPropertyChanged("ServiceDesk_Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_TaskCategories")]
	public partial class ServiceDesk_TaskCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TaskID;
		
		private int _CategoryID;
		
		private EntityRef<ServiceDesk_Category> _ServiceDesk_Category;
		
		private EntityRef<ServiceDesk_Task> _ServiceDesk_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public ServiceDesk_TaskCategory()
		{
			this._ServiceDesk_Category = default(EntityRef<ServiceDesk_Category>);
			this._ServiceDesk_Task = default(EntityRef<ServiceDesk_Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", DbType="Int NOT NULL")]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._ServiceDesk_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._ServiceDesk_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Category_ServiceDesk_TaskCategory", Storage="_ServiceDesk_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public ServiceDesk_Category ServiceDesk_Category
		{
			get
			{
				return this._ServiceDesk_Category.Entity;
			}
			set
			{
				ServiceDesk_Category previousValue = this._ServiceDesk_Category.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDesk_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDesk_Category.Entity = null;
						previousValue.ServiceDesk_TaskCategories.Remove(this);
					}
					this._ServiceDesk_Category.Entity = value;
					if ((value != null))
					{
						value.ServiceDesk_TaskCategories.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("ServiceDesk_Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_TaskCategory", Storage="_ServiceDesk_Task", ThisKey="TaskID", OtherKey="TaskID", IsForeignKey=true)]
		public ServiceDesk_Task ServiceDesk_Task
		{
			get
			{
				return this._ServiceDesk_Task.Entity;
			}
			set
			{
				ServiceDesk_Task previousValue = this._ServiceDesk_Task.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDesk_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDesk_Task.Entity = null;
						previousValue.ServiceDesk_TaskCategories.Remove(this);
					}
					this._ServiceDesk_Task.Entity = value;
					if ((value != null))
					{
						value.ServiceDesk_TaskCategories.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(int);
					}
					this.SendPropertyChanged("ServiceDesk_Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_TaskDetails")]
	public partial class ServiceDesk_TaskDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetailID;
		
		private int _TaskID;
		
		private string _DetailType;
		
		private System.DateTime _InsertDate;
		
		private int _UserID;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _StopTime;
		
		private EntitySet<ServiceDesk_Attachment> _ServiceDesk_Attachments;
		
		private EntityRef<ServiceDesk_Task> _ServiceDesk_Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailIDChanging(int value);
    partial void OnDetailIDChanged();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnDetailTypeChanging(string value);
    partial void OnDetailTypeChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnStopTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStopTimeChanged();
    #endregion
		
		public ServiceDesk_TaskDetail()
		{
			this._ServiceDesk_Attachments = new EntitySet<ServiceDesk_Attachment>(new Action<ServiceDesk_Attachment>(this.attach_ServiceDesk_Attachments), new Action<ServiceDesk_Attachment>(this.detach_ServiceDesk_Attachments));
			this._ServiceDesk_Task = default(EntityRef<ServiceDesk_Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", DbType="Int NOT NULL")]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					if (this._ServiceDesk_Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DetailType
		{
			get
			{
				return this._DetailType;
			}
			set
			{
				if ((this._DetailType != value))
				{
					this.OnDetailTypeChanging(value);
					this.SendPropertyChanging();
					this._DetailType = value;
					this.SendPropertyChanged("DetailType");
					this.OnDetailTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StopTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StopTime
		{
			get
			{
				return this._StopTime;
			}
			set
			{
				if ((this._StopTime != value))
				{
					this.OnStopTimeChanging(value);
					this.SendPropertyChanging();
					this._StopTime = value;
					this.SendPropertyChanged("StopTime");
					this.OnStopTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_TaskDetail_ServiceDesk_Attachment", Storage="_ServiceDesk_Attachments", ThisKey="DetailID", OtherKey="DetailID")]
		public EntitySet<ServiceDesk_Attachment> ServiceDesk_Attachments
		{
			get
			{
				return this._ServiceDesk_Attachments;
			}
			set
			{
				this._ServiceDesk_Attachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_TaskDetail", Storage="_ServiceDesk_Task", ThisKey="TaskID", OtherKey="TaskID", IsForeignKey=true)]
		public ServiceDesk_Task ServiceDesk_Task
		{
			get
			{
				return this._ServiceDesk_Task.Entity;
			}
			set
			{
				ServiceDesk_Task previousValue = this._ServiceDesk_Task.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDesk_Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDesk_Task.Entity = null;
						previousValue.ServiceDesk_TaskDetails.Remove(this);
					}
					this._ServiceDesk_Task.Entity = value;
					if ((value != null))
					{
						value.ServiceDesk_TaskDetails.Add(this);
						this._TaskID = value.TaskID;
					}
					else
					{
						this._TaskID = default(int);
					}
					this.SendPropertyChanged("ServiceDesk_Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceDesk_Attachments(ServiceDesk_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_TaskDetail = this;
		}
		
		private void detach_ServiceDesk_Attachments(ServiceDesk_Attachment entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_TaskDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_Categories")]
	public partial class ServiceDesk_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private int _PortalID;
		
		private System.Nullable<int> _ParentCategoryID;
		
		private string _CategoryName;
		
		private System.Nullable<int> _Level;
		
		private bool _RequestorVisible;
		
		private bool _Selectable;
		
		private EntitySet<ServiceDesk_TaskCategory> _ServiceDesk_TaskCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnParentCategoryIDChanging(System.Nullable<int> value);
    partial void OnParentCategoryIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnLevelChanging(System.Nullable<int> value);
    partial void OnLevelChanged();
    partial void OnRequestorVisibleChanging(bool value);
    partial void OnRequestorVisibleChanged();
    partial void OnSelectableChanging(bool value);
    partial void OnSelectableChanged();
    #endregion
		
		public ServiceDesk_Category()
		{
			this._ServiceDesk_TaskCategories = new EntitySet<ServiceDesk_TaskCategory>(new Action<ServiceDesk_TaskCategory>(this.attach_ServiceDesk_TaskCategories), new Action<ServiceDesk_TaskCategory>(this.detach_ServiceDesk_TaskCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryID", DbType="Int")]
		public System.Nullable<int> ParentCategoryID
		{
			get
			{
				return this._ParentCategoryID;
			}
			set
			{
				if ((this._ParentCategoryID != value))
				{
					this.OnParentCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ParentCategoryID = value;
					this.SendPropertyChanged("ParentCategoryID");
					this.OnParentCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(50)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int")]
		public System.Nullable<int> Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestorVisible", DbType="Bit NOT NULL")]
		public bool RequestorVisible
		{
			get
			{
				return this._RequestorVisible;
			}
			set
			{
				if ((this._RequestorVisible != value))
				{
					this.OnRequestorVisibleChanging(value);
					this.SendPropertyChanging();
					this._RequestorVisible = value;
					this.SendPropertyChanged("RequestorVisible");
					this.OnRequestorVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Selectable", DbType="Bit NOT NULL")]
		public bool Selectable
		{
			get
			{
				return this._Selectable;
			}
			set
			{
				if ((this._Selectable != value))
				{
					this.OnSelectableChanging(value);
					this.SendPropertyChanging();
					this._Selectable = value;
					this.SendPropertyChanged("Selectable");
					this.OnSelectableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Category_ServiceDesk_TaskCategory", Storage="_ServiceDesk_TaskCategories", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<ServiceDesk_TaskCategory> ServiceDesk_TaskCategories
		{
			get
			{
				return this._ServiceDesk_TaskCategories;
			}
			set
			{
				this._ServiceDesk_TaskCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceDesk_TaskCategories(ServiceDesk_TaskCategory entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Category = this;
		}
		
		private void detach_ServiceDesk_TaskCategories(ServiceDesk_TaskCategory entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_Attachments")]
	public partial class ServiceDesk_Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentID;
		
		private int _DetailID;
		
		private string _AttachmentPath;
		
		private string _FileName;
		
		private string _OriginalFileName;
		
		private int _UserID;
		
		private EntityRef<ServiceDesk_TaskDetail> _ServiceDesk_TaskDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIDChanging(int value);
    partial void OnAttachmentIDChanged();
    partial void OnDetailIDChanging(int value);
    partial void OnDetailIDChanged();
    partial void OnAttachmentPathChanging(string value);
    partial void OnAttachmentPathChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnOriginalFileNameChanging(string value);
    partial void OnOriginalFileNameChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    #endregion
		
		public ServiceDesk_Attachment()
		{
			this._ServiceDesk_TaskDetail = default(EntityRef<ServiceDesk_TaskDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailID", DbType="Int NOT NULL")]
		public int DetailID
		{
			get
			{
				return this._DetailID;
			}
			set
			{
				if ((this._DetailID != value))
				{
					if (this._ServiceDesk_TaskDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailIDChanging(value);
					this.SendPropertyChanging();
					this._DetailID = value;
					this.SendPropertyChanged("DetailID");
					this.OnDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentPath", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string AttachmentPath
		{
			get
			{
				return this._AttachmentPath;
			}
			set
			{
				if ((this._AttachmentPath != value))
				{
					this.OnAttachmentPathChanging(value);
					this.SendPropertyChanging();
					this._AttachmentPath = value;
					this.SendPropertyChanged("AttachmentPath");
					this.OnAttachmentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFileName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string OriginalFileName
		{
			get
			{
				return this._OriginalFileName;
			}
			set
			{
				if ((this._OriginalFileName != value))
				{
					this.OnOriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFileName = value;
					this.SendPropertyChanged("OriginalFileName");
					this.OnOriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_TaskDetail_ServiceDesk_Attachment", Storage="_ServiceDesk_TaskDetail", ThisKey="DetailID", OtherKey="DetailID", IsForeignKey=true)]
		public ServiceDesk_TaskDetail ServiceDesk_TaskDetail
		{
			get
			{
				return this._ServiceDesk_TaskDetail.Entity;
			}
			set
			{
				ServiceDesk_TaskDetail previousValue = this._ServiceDesk_TaskDetail.Entity;
				if (((previousValue != value) 
							|| (this._ServiceDesk_TaskDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceDesk_TaskDetail.Entity = null;
						previousValue.ServiceDesk_Attachments.Remove(this);
					}
					this._ServiceDesk_TaskDetail.Entity = value;
					if ((value != null))
					{
						value.ServiceDesk_Attachments.Add(this);
						this._DetailID = value.DetailID;
					}
					else
					{
						this._DetailID = default(int);
					}
					this.SendPropertyChanged("ServiceDesk_TaskDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_Tasks")]
	public partial class ServiceDesk_Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaskID;
		
		private int _PortalID;
		
		private string _Description;
		
		private string _Status;
		
		private string _Priority;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _EstimatedStart;
		
		private System.Nullable<System.DateTime> _EstimatedCompletion;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private int _AssignedRoleID;
		
		private string _TicketPassword;
		
		private int _RequesterUserID;
		
		private string _RequesterName;
		
		private string _RequesterEmail;
		
		private string _RequesterPhone;
		
		private System.Nullable<int> _EstimatedHours;
		
		private EntitySet<ServiceDesk_Log> _ServiceDesk_Logs;
		
		private EntitySet<ServiceDesk_TaskAssociation> _ServiceDesk_TaskAssociations;
		
		private EntitySet<ServiceDesk_TaskCategory> _ServiceDesk_TaskCategories;
		
		private EntitySet<ServiceDesk_TaskDetail> _ServiceDesk_TaskDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(int value);
    partial void OnTaskIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnEstimatedStartChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedStartChanged();
    partial void OnEstimatedCompletionChanging(System.Nullable<System.DateTime> value);
    partial void OnEstimatedCompletionChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnAssignedRoleIDChanging(int value);
    partial void OnAssignedRoleIDChanged();
    partial void OnTicketPasswordChanging(string value);
    partial void OnTicketPasswordChanged();
    partial void OnRequesterUserIDChanging(int value);
    partial void OnRequesterUserIDChanged();
    partial void OnRequesterNameChanging(string value);
    partial void OnRequesterNameChanged();
    partial void OnRequesterEmailChanging(string value);
    partial void OnRequesterEmailChanged();
    partial void OnRequesterPhoneChanging(string value);
    partial void OnRequesterPhoneChanged();
    partial void OnEstimatedHoursChanging(System.Nullable<int> value);
    partial void OnEstimatedHoursChanged();
    #endregion
		
		public ServiceDesk_Task()
		{
			this._ServiceDesk_Logs = new EntitySet<ServiceDesk_Log>(new Action<ServiceDesk_Log>(this.attach_ServiceDesk_Logs), new Action<ServiceDesk_Log>(this.detach_ServiceDesk_Logs));
			this._ServiceDesk_TaskAssociations = new EntitySet<ServiceDesk_TaskAssociation>(new Action<ServiceDesk_TaskAssociation>(this.attach_ServiceDesk_TaskAssociations), new Action<ServiceDesk_TaskAssociation>(this.detach_ServiceDesk_TaskAssociations));
			this._ServiceDesk_TaskCategories = new EntitySet<ServiceDesk_TaskCategory>(new Action<ServiceDesk_TaskCategory>(this.attach_ServiceDesk_TaskCategories), new Action<ServiceDesk_TaskCategory>(this.detach_ServiceDesk_TaskCategories));
			this._ServiceDesk_TaskDetails = new EntitySet<ServiceDesk_TaskDetail>(new Action<ServiceDesk_TaskDetail>(this.attach_ServiceDesk_TaskDetails), new Action<ServiceDesk_TaskDetail>(this.detach_ServiceDesk_TaskDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedStart
		{
			get
			{
				return this._EstimatedStart;
			}
			set
			{
				if ((this._EstimatedStart != value))
				{
					this.OnEstimatedStartChanging(value);
					this.SendPropertyChanging();
					this._EstimatedStart = value;
					this.SendPropertyChanged("EstimatedStart");
					this.OnEstimatedStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedCompletion", DbType="DateTime")]
		public System.Nullable<System.DateTime> EstimatedCompletion
		{
			get
			{
				return this._EstimatedCompletion;
			}
			set
			{
				if ((this._EstimatedCompletion != value))
				{
					this.OnEstimatedCompletionChanging(value);
					this.SendPropertyChanging();
					this._EstimatedCompletion = value;
					this.SendPropertyChanged("EstimatedCompletion");
					this.OnEstimatedCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedRoleID", DbType="Int NOT NULL")]
		public int AssignedRoleID
		{
			get
			{
				return this._AssignedRoleID;
			}
			set
			{
				if ((this._AssignedRoleID != value))
				{
					this.OnAssignedRoleIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedRoleID = value;
					this.SendPropertyChanged("AssignedRoleID");
					this.OnAssignedRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TicketPassword
		{
			get
			{
				return this._TicketPassword;
			}
			set
			{
				if ((this._TicketPassword != value))
				{
					this.OnTicketPasswordChanging(value);
					this.SendPropertyChanging();
					this._TicketPassword = value;
					this.SendPropertyChanged("TicketPassword");
					this.OnTicketPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequesterUserID", DbType="Int NOT NULL")]
		public int RequesterUserID
		{
			get
			{
				return this._RequesterUserID;
			}
			set
			{
				if ((this._RequesterUserID != value))
				{
					this.OnRequesterUserIDChanging(value);
					this.SendPropertyChanging();
					this._RequesterUserID = value;
					this.SendPropertyChanged("RequesterUserID");
					this.OnRequesterUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequesterName", DbType="NVarChar(350)")]
		public string RequesterName
		{
			get
			{
				return this._RequesterName;
			}
			set
			{
				if ((this._RequesterName != value))
				{
					this.OnRequesterNameChanging(value);
					this.SendPropertyChanging();
					this._RequesterName = value;
					this.SendPropertyChanged("RequesterName");
					this.OnRequesterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequesterEmail", DbType="NVarChar(350)")]
		public string RequesterEmail
		{
			get
			{
				return this._RequesterEmail;
			}
			set
			{
				if ((this._RequesterEmail != value))
				{
					this.OnRequesterEmailChanging(value);
					this.SendPropertyChanging();
					this._RequesterEmail = value;
					this.SendPropertyChanged("RequesterEmail");
					this.OnRequesterEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequesterPhone", DbType="NVarChar(50)")]
		public string RequesterPhone
		{
			get
			{
				return this._RequesterPhone;
			}
			set
			{
				if ((this._RequesterPhone != value))
				{
					this.OnRequesterPhoneChanging(value);
					this.SendPropertyChanging();
					this._RequesterPhone = value;
					this.SendPropertyChanged("RequesterPhone");
					this.OnRequesterPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstimatedHours", DbType="Int")]
		public System.Nullable<int> EstimatedHours
		{
			get
			{
				return this._EstimatedHours;
			}
			set
			{
				if ((this._EstimatedHours != value))
				{
					this.OnEstimatedHoursChanging(value);
					this.SendPropertyChanging();
					this._EstimatedHours = value;
					this.SendPropertyChanged("EstimatedHours");
					this.OnEstimatedHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_Log", Storage="_ServiceDesk_Logs", ThisKey="TaskID", OtherKey="TaskID")]
		public EntitySet<ServiceDesk_Log> ServiceDesk_Logs
		{
			get
			{
				return this._ServiceDesk_Logs;
			}
			set
			{
				this._ServiceDesk_Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_TaskAssociation", Storage="_ServiceDesk_TaskAssociations", ThisKey="TaskID", OtherKey="TaskID")]
		public EntitySet<ServiceDesk_TaskAssociation> ServiceDesk_TaskAssociations
		{
			get
			{
				return this._ServiceDesk_TaskAssociations;
			}
			set
			{
				this._ServiceDesk_TaskAssociations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_TaskCategory", Storage="_ServiceDesk_TaskCategories", ThisKey="TaskID", OtherKey="TaskID")]
		public EntitySet<ServiceDesk_TaskCategory> ServiceDesk_TaskCategories
		{
			get
			{
				return this._ServiceDesk_TaskCategories;
			}
			set
			{
				this._ServiceDesk_TaskCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceDesk_Task_ServiceDesk_TaskDetail", Storage="_ServiceDesk_TaskDetails", ThisKey="TaskID", OtherKey="TaskID")]
		public EntitySet<ServiceDesk_TaskDetail> ServiceDesk_TaskDetails
		{
			get
			{
				return this._ServiceDesk_TaskDetails;
			}
			set
			{
				this._ServiceDesk_TaskDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceDesk_Logs(ServiceDesk_Log entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = this;
		}
		
		private void detach_ServiceDesk_Logs(ServiceDesk_Log entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = null;
		}
		
		private void attach_ServiceDesk_TaskAssociations(ServiceDesk_TaskAssociation entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = this;
		}
		
		private void detach_ServiceDesk_TaskAssociations(ServiceDesk_TaskAssociation entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = null;
		}
		
		private void attach_ServiceDesk_TaskCategories(ServiceDesk_TaskCategory entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = this;
		}
		
		private void detach_ServiceDesk_TaskCategories(ServiceDesk_TaskCategory entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = null;
		}
		
		private void attach_ServiceDesk_TaskDetails(ServiceDesk_TaskDetail entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = this;
		}
		
		private void detach_ServiceDesk_TaskDetails(ServiceDesk_TaskDetail entity)
		{
			this.SendPropertyChanging();
			entity.ServiceDesk_Task = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_Roles")]
	public partial class ServiceDesk_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PortalID;
		
		private int _RoleID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnRoleIDChanging(int value);
    partial void OnRoleIDChanged();
    #endregion
		
		public ServiceDesk_Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Int NOT NULL")]
		public int RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceDesk_LastSearch")]
	public partial class ServiceDesk_LastSearch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private int _PortalID;
		
		private string _SearchText;
		
		private string _Status;
		
		private string _Priority;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _AssignedRoleID;
		
		private string _Categories;
		
		private System.Nullable<int> _CurrentPage;
		
		private System.Nullable<int> _PageSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnSearchTextChanging(string value);
    partial void OnSearchTextChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPriorityChanging(string value);
    partial void OnPriorityChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnAssignedRoleIDChanging(System.Nullable<int> value);
    partial void OnAssignedRoleIDChanged();
    partial void OnCategoriesChanging(string value);
    partial void OnCategoriesChanged();
    partial void OnCurrentPageChanging(System.Nullable<int> value);
    partial void OnCurrentPageChanged();
    partial void OnPageSizeChanging(System.Nullable<int> value);
    partial void OnPageSizeChanged();
    #endregion
		
		public ServiceDesk_LastSearch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchText", DbType="NVarChar(150)")]
		public string SearchText
		{
			get
			{
				return this._SearchText;
			}
			set
			{
				if ((this._SearchText != value))
				{
					this.OnSearchTextChanging(value);
					this.SendPropertyChanging();
					this._SearchText = value;
					this.SendPropertyChanged("SearchText");
					this.OnSearchTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="NVarChar(50)")]
		public string Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedRoleID", DbType="Int")]
		public System.Nullable<int> AssignedRoleID
		{
			get
			{
				return this._AssignedRoleID;
			}
			set
			{
				if ((this._AssignedRoleID != value))
				{
					this.OnAssignedRoleIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedRoleID = value;
					this.SendPropertyChanged("AssignedRoleID");
					this.OnAssignedRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categories", DbType="NVarChar(2000)")]
		public string Categories
		{
			get
			{
				return this._Categories;
			}
			set
			{
				if ((this._Categories != value))
				{
					this.OnCategoriesChanging(value);
					this.SendPropertyChanging();
					this._Categories = value;
					this.SendPropertyChanged("Categories");
					this.OnCategoriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPage", DbType="Int")]
		public System.Nullable<int> CurrentPage
		{
			get
			{
				return this._CurrentPage;
			}
			set
			{
				if ((this._CurrentPage != value))
				{
					this.OnCurrentPageChanging(value);
					this.SendPropertyChanging();
					this._CurrentPage = value;
					this.SendPropertyChanged("CurrentPage");
					this.OnCurrentPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSize", DbType="Int")]
		public System.Nullable<int> PageSize
		{
			get
			{
				return this._PageSize;
			}
			set
			{
				if ((this._PageSize != value))
				{
					this.OnPageSizeChanging(value);
					this.SendPropertyChanging();
					this._PageSize = value;
					this.SendPropertyChanged("PageSize");
					this.OnPageSizeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
